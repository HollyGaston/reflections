How did viewing a diff between two versions of a file help you see the
bug that was introduced?

It highlighted the lines that had been changed, enabling me to review only
the sections that could contain the error.


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It can help identify mistakes or recover features that were accidentally deleted.


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Each commit has a specific intended purpose, which you can explain in the 
comments field, so it's easier to understand which one you want to review
later.


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

In some cases, files are interrelated, so it's helpful to track them together, since changes in one affect the other(s).


How can you use the commands git log and git diff to view the history of files?

git log allows you to view the commit history, and git diff provides a side-by-side comparison of differences between two versions.


How might using version control make you more confident to make changes that could break something?

It enables you to return to the previous state, so it eliminates the risks of making changes.


Now that you have your workspace set up, what do you want to try using Git for?

I'd like to use Git to keep track of different versions of my practice code for the course.